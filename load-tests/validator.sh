#!/bin/bash

validate_report() {
  local report_file="$1"
  echo "üìä Validating $report_file"

  if [ ! -f "$report_file" ]; then
    echo "‚ùå Report file not found: $report_file"
    exit 1
  fi

  local max
  local avg
  local errored

  # –ò–∑–≤–ª–µ–∫–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è
  max=$(grep -E '^\s*max:' "$report_file" | grep -oE '-?[0-9]+')
  avg=$(grep -E '^\s*avg:' "$report_file" | grep -oE '[0-9]+(\.[0-9]+)?')
  errored=$(grep -E '^\s*errored:' "$report_file" | grep -oE '[0-9]+')

  echo "Parsed values:"
  echo "  ‚Ü™ max:     $max"
  echo "  ‚Ü™ avg:     $avg"
  echo "  ‚Ü™ errors:  $errored"

  if [[ -z "$max" || -z "$avg" || -z "$errored" ]]; then
    echo "‚ùå Could not parse required metrics from $report_file"
    exit 1
  fi

  if (( max >= 10000 )); then
    echo "‚ùå Max response time too high: ${max}ms (limit 10000ms)"
    exit 1
  fi

  avg_int=${avg%.*} # –æ–±—Ä–µ–∑–∞–µ–º –¥—Ä–æ–±–Ω—É—é —á–∞—Å—Ç—å
  if (( avg_int >= 1600 )); then
    echo "‚ùå Average response time too high: ${avg}ms (limit 1600ms)"
    exit 1
  fi

  if (( errored > 0 )); then
    echo "‚ùå Found ${errored} errored steps (expected 0)"
    exit 1
  fi

  echo "‚úÖ Report passed thresholds!"
}

# –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Å –ø–µ—Ä–≤—ã–º –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º —Å–∫—Ä–∏–ø—Ç–∞
validate_report "$1"