name: Run Prod Load Tests with E2E

on:
  schedule: 
    - cron: '0 * * * *'

  push:
    branches:
      - feature/*

jobs:
  # this is needed to wait for the new docker image to be build and published to the registry
  # so that we can use the image to run ui of the needed commit related version as part of local-env
  # the idea is taken from here https://stackoverflow.com/a/71489231
  push_to_registry:
    uses: ./.github/workflows/local-env-docker-build-and-push.yml
    # without this it cannot login to the registry
    secrets: inherit

  run-playwright-e2e-tests:
    runs-on: ubuntu-24.04
    needs: push_to_registry

    strategy:
      fail-fast: false
      matrix:
        node-version: [20.18.0]

    steps:
      - name: Checkout local-env
        uses: actions/checkout@v4
        with:
          repository: TourmalineCore/pelican-local-env

      - name: Deploy Local Env to Kind k8s
        uses: devcontainers/ci@v0.3
        with:
          runCmd: |
            # we need to override "latest" image tag of ui inside local-env to run e2e against the current commit ui version and not against latest from master
            # We tried to use yq to change the image tag, but in the values files for helmfile we have non-yaml code that yq can`t parse or ignore
            # so for that reason we use Stream EDitor which can find needeed string using regular expressions and change it to a new value
            # The -i flag is needed to write new image tag directly to values file
            sed -i "0,/tag:.*/s//tag: \"local-env-sha-${{ github.sha }}\"/" deploy/values-ui.yaml.gotmpl

            kind create cluster --name pelican --config kind-local-config.yaml --kubeconfig ./.pelican-cluster-kubeconfig
            
            export KUBECONFIG=$(pwd)/.pelican-cluster-kubeconfig

            helmfile --environment local --namespace local -f deploy/helmfile.yaml apply
          push: never
          # this variable is used by local-env helmfile to use current feature branch helm chart values.yaml file
          # this is needed for a case when as part of the feature the chart was changed and is different from master branch
          # this should properly fill the feature branch name in spite of the pipeline trigger source (PR, commit, etc.)
          # https://stackoverflow.com/a/71158878
          env: |
              PELICAN_UI_BRANCH=${{ github.head_ref || github.ref_name }}

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
  
      # let's cache the binaries of installed browsers that we don't re-install them every time from scratch
      - name: Cache playwright browsers
        id: cache-playwrightbrowsers
        uses: actions/cache@v4
        env:
          cache-name: cache-playwright-browsers
        with:
          # caching browsers binaries
          # this path is taken from here https://playwright.dev/docs/browsers#managing-browser-binaries
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        run: npm ci
      
      - name: Install StepCI
        run: npm install -g stepci

      - name: Run load tests
        run: |
          set -e
          stepci run --loadtest ./load-tests/loadtestHomePage.yml > loadtestHomePage-report.txt
          stepci run --loadtest ./load-tests/loadtestDocumentsPage.yml > loadtestDocumentsPage-report.txt
          stepci run --loadtest ./load-tests/loadtestNewsPage.yml > loadtestNewsPage-report.txt
        env:
          HOST: http://chelzoo.ru

      - name: Install Playwright Browsers
        if: steps.cache-playwrightbrowsers.outputs.cache-hit != 'true'
        run: npx playwright install chromium --with-deps

      - name: Playwright run main E2E tests
        run: npm run playwright:run:e2e --reporter=html 
    
        env:
          FRONTEND_URL: http://localhost:40110 
          API_URL: 'http://localhost:40110/cms/api'

      - name: Playwright run Load tests
        run: npm run playwright:run:load-tests --reporter=html 
    
        env:
          FRONTEND_URL: http://localhost:40110 
          API_URL: 'http://localhost:40110/cms/api'

      - name: Upload HTML report
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: html-report--attempt-${{ github.run_attempt }}
          path: playwright-report
          retention-days: 7

      - name: Archive reports
        uses: actions/upload-artifact@v4
        with:
          name: test-reports--attempt-${{ github.run_attempt }}
          path: |
            playwright-report/
            loadtest-*.html
          retention-days: 7
